$#include "../aps/gl/Texture2D.h"

$using namespace aps::gl;

typedef int GLint;
typedef unsigned int GLuint;
typedef unsigned int GLenum;
typedef unsigned char GLubyte;

module gl
{

	class Texture2D
	{
		Texture2D(GLuint textureId, GLuint rawWidth, GLuint rawHeight, GLuint width, GLuint height);
		Texture2D(GLuint rawWidth, GLuint rawHeight, GLuint width, GLuint height);
		~Texture2D();
		
		GLuint rawWidth();
		GLuint rawHeight();
		GLuint width();
		GLuint height();
		
		Texture2D& bind();
		Texture2D& unbind();
		
		Texture2D& image2D(GLenum target, GLint level, GLint internalFormat,
							 GLenum format, GLenum type, const void* data);
		Texture2D& parameter(GLenum key, GLenum value);
		Texture2D& parameter(std::unordered_map<GLenum, GLenum> parameter);
		
		static Texture2D fromData(const GLubyte* data, int width, int height);
	};

}
